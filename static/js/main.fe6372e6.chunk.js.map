{"version":3,"sources":["data/dataFetch.js","constants.js","components/DinoBasicInfo.js","components/DinoProfile.js","components/DinoList.js","App.js","index.js"],"names":["url","MODE","local","remote","iconBasePath","icons","Object","freeze","weight","height","length","diet","DinoBasicInfo","_ref","dino","react_default","a","createElement","className","map","k","key","src","DinoProfile","name","imgSrc","alt","components_DinoBasicInfo","objectSpread2","DinoList","_useState","useState","_useState2","slicedToArray","dinos","setDinos","_useState3","_useState4","selectedDino","setSelectedDino","useEffect","arguments","undefined","Promise","resolve","mockData","window","fetch","then","response","json","getDinoList","data","sort","_ref2","name1","name2","i","rst","charCodeAt","sortByName","concat","onClick","dinoClicked","App","components_DinoList","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fe6372e6.chunk.js","sourcesContent":["import mockData from './localData';\n\nconst url = 'https://danyu.github.io/dinopediadata/dinos.json';\nexport const MODE = {\n  local: 0,\n  remote: 1\n}\nexport function getDinoList(mode = MODE.local) {\n  if (mode === MODE.local) {\n    return new Promise((resolve) => resolve(mockData));\n  }\n  return window.fetch(url).then(response => response.json());\n}","export const iconBasePath = '/resources/icons/';\nexport const icons = Object.freeze({\n  weight: 'weighing-scale.svg',\n  height: 'ruler.svg',\n  length: 'ruler.svg',\n  diet: 'dinner.svg',\n});","import React from 'react';\nimport { icons, iconBasePath } from '../constants';\n\nfunction DinoBasicInfo({ dino }) {\n  const keys = ['weight', 'height', 'length', 'diet'];\n  return (\n    <div className='basic-info-container'>\n      {\n        keys.map((k) => {\n          return (<div key={k}>\n            <div className='basic-info-row'>\n              <img className='icon' src={iconBasePath + icons[k]} />\n              <span className='basic-info-title'>{k} </span>: {dino[k] || 'n/a'}</div>\n          </div>);\n        })\n      }\n    </div>\n  );\n};\n\nexport default DinoBasicInfo;","import '../styles.css';\nimport React from 'react';\nimport DinoBasicInfo from './DinoBasicInfo';\nexport default function DinoProfile({ dino }) {\n  const { name, imgSrc } = dino;\n  return (\n    <div className='profile-container'>\n      <div className='dino-pic-container'>\n        {/* <div>{name}</div> */}\n        <img src={imgSrc} alt={name} />\n      </div>\n      <div>\n        <DinoBasicInfo dino={{ ...dino }} ></DinoBasicInfo>\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react';\nimport { getDinoList, MODE } from '../data/dataFetch';\nimport \"../styles.css\";\nimport DinoProfile from './DinoProfile';\n\nfunction DinoList() {\n  const [dinos, setDinos] = useState([]);\n  const [selectedDino, setSelectedDino] = useState({});\n\n  function sortByName(data) {\n    return data.sort(({ name: name1 }, { name: name2 }) => {\n      let i = 0;\n      let rst = false;\n      while (i < name1.length && i < name2.length) {\n        rst = rst || (name1.charCodeAt(i) - name2.charCodeAt(i));\n        if (rst) return rst;\n        i++;\n      }\n      return rst;\n    })\n  }\n\n  useEffect(() => {\n    getDinoList(MODE.remote).then(data => {\n      setDinos(sortByName(data));\n      setSelectedDino(data[0]);\n    });\n    // setDinos(data);\n  }, [])\n\n  const dinoClicked = (dino) => setSelectedDino(dino);\n\n  return (\n    <div className='main'>\n      <div className='dino-name-list'>\n        {dinos.map((dino, i) => {\n          return (\n            <div key={dino.name + i} className={`dino-name-container ${dino.name === selectedDino.name ? 'dino-name-selected' : ''}`} onClick={() => dinoClicked(dino)}>\n              <div className='dino-name'>\n                <span className='dino-name-text'>{dino.name}</span>\n                <div className='progress-fill'></div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      <div className='dino-profile' >\n        <DinoProfile dino={selectedDino} />\n      </div>\n    </div>\n  )\n}\n\nexport default DinoList;","import React from \"react\";\nimport DinoList from './components/DinoList';\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Eric & Ethan's DinoPedia</h1>\n      <DinoList />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}